function [F64D1Data,F64D2Data,F64D3Data,F64D4Data,F64D5Data,F64D6Data,F64D7Data,F64D8Data,F64D9Data,F64D10Data] = importmedfunction(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [F64D1DATA,F64D2DATA,F64D3DATA,F64D4DATA,F64D5DATA,F64D6DATA,F64D7DATA,F64D8DATA,F64D9DATA,F64D10DATA]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [F64D1DATA,F64D2DATA,F64D3DATA,F64D4DATA,F64D5DATA,F64D6DATA,F64D7DATA,F64D8DATA,F64D9DATA,F64D10DATA]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [F64D1Data,F64D2Data,F64D3Data,F64D4Data,F64D5Data,F64D6Data,F64D7Data,F64D8Data,F64D9Data,F64D10Data]
%   = importfile('FAY__064_0004.med',78, 2125);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2014/09/18 18:57:33

%% Initialize variables.
delimiter = ' ';
if nargin<=2
    startRow = 78;
    endRow = inf;
end

%% Format string for each line of text:
%   column2: double (%f)
%	column3: double (%f)
%   column4: double (%f)
%	column5: double (%f)
%   column6: double (%f)
%	column7: double (%f)
%   column8: double (%f)
%	column9: double (%f)
%   column10: double (%f)
%	column11: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%*s%f%f%f%f%f%f%f%f%f%f%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
F64D1Data = dataArray{:, 1};
F64D2Data = dataArray{:, 2};
F64D3Data = dataArray{:, 3};
F64D4Data = dataArray{:, 4};
F64D5Data = dataArray{:, 5};
F64D6Data = dataArray{:, 6};
F64D7Data = dataArray{:, 7};
F64D8Data = dataArray{:, 8};
F64D9Data = dataArray{:, 9};
F64D10Data = dataArray{:, 10};

